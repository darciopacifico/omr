// This class was generated by the JAXRPC RI, do not edit.
// Contents subject to change without notice.

package com.msaf.validador.wsclient;

import com.sun.xml.rpc.client.BasicService;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.*;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.rpc.*;
import javax.xml.rpc.encoding.*;
import javax.xml.namespace.QName;

public class ValidadorDelegateImplService_SerializerRegistry implements SerializerConstants {
    public ValidadorDelegateImplService_SerializerRegistry() {
    }
    
    public TypeMappingRegistry getRegistry() {
        
        TypeMappingRegistry registry = BasicService.createStandardTypeMappingRegistry();
        TypeMapping mapping = registry.getTypeMapping(SOAPConstants.NS_SOAP_ENCODING);
        TypeMapping mapping2 = registry.getTypeMapping("");
        {
            QName type = new QName("http://webservices.validador.msaf.com/", "Registro");
            CombinedSerializer serializer = new LiteralFragmentSerializer(type, NOT_NULLABLE, "");
            registerSerializer(mapping2,javax.xml.soap.SOAPElement.class, type, serializer);
        }
        {
            QName type = new QName("http://webservices.validador.msaf.com/", "consultaClienteResponse");
            CombinedSerializer serializer = new com.msaf.validador.wsclient.ConsultaClienteResponse_LiteralSerializer(type, "");
            registerSerializer(mapping2,com.msaf.validador.wsclient.ConsultaClienteResponse.class, type, serializer);
        }
        {
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(SchemaConstants.QNAME_TYPE_STRING,
                "", XSDStringEncoder.getInstance());
            registerSerializer(mapping2,java.lang.String.class, SchemaConstants.QNAME_TYPE_STRING, serializer);
        }
        {
            CombinedSerializer serializer = new LiteralSimpleTypeSerializer(SchemaConstants.QNAME_TYPE_INT,
                "", XSDIntEncoder.getInstance());
            registerSerializer(mapping2,int.class, SchemaConstants.QNAME_TYPE_INT, serializer);
        }
        {
            QName type = new QName("http://webservices.validador.msaf.com/", "consultaCliente");
            CombinedSerializer serializer = new com.msaf.validador.wsclient.ConsultaCliente_LiteralSerializer(type, "");
            registerSerializer(mapping2,com.msaf.validador.wsclient.ConsultaCliente.class, type, serializer);
        }
        return registry;
    }
    
    private static void registerSerializer(TypeMapping mapping, Class javaType, QName xmlType,
        Serializer ser) {
        mapping.register(javaType, xmlType, new SingletonSerializerFactory(ser),
            new SingletonDeserializerFactory((Deserializer)ser));
    }
    
}
